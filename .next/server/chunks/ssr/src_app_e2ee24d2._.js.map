{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///home/jiri/akisiivous.fi/src/app/components/HeroSection.tsx"],"sourcesContent":["'use client'\nimport React, { useEffect, useState, } from \"react\";\nimport { WindowCleaningIcon, Trolley, Duster, Cleaning, Tools, Vacuum, Spray, Mop, Hand } from '../components/icons';\n\ninterface Section {\n    section_id: string;\n    title: string;\n    text: string;\n    id: string;\n    service_title: string;\n}\ninterface Service {\n    service_id: string;\n    icon: string;\n    service_name: string;\n    description: string;\n}\n// Type guard to check if an item is a Section\nfunction isSection(item: unknown): item is Section {\n    return (\n        typeof item === 'object' &&\n        item !== null &&\n        'section_id' in item &&\n        typeof (item as Section).section_id === 'string'\n    );\n}\n// Type guard to check if an item is a Service\nfunction isService(item: unknown): item is Service {\n    return (\n        typeof item === 'object' &&\n        item !== null &&\n        'service_id' in item &&\n        typeof (item as Service).service_id === 'string'\n    );\n}\n// Type guard to check if an item is an array of Services\nfunction isServiceArray(item: unknown): item is Service[] {\n    return Array.isArray(item) && item.every(isService);\n}\n\n// Icon map to dynamically render icons based on name\nconst IconMap: Record<string, React.ComponentType<Record<string, unknown>>> = {\n    WindowCleaningIcon,\n    Trolley,\n    Duster,\n    Cleaning,\n    Tools,\n    Vacuum,\n    Spray,\n    Mop,\n    Hand\n};\n\nexport const ServiceComponent = () => {\n    const [data, setData] = useState<(Section | Service[])[]>([]);\n    const [isLoading, setIsLoading] = useState<boolean>(true);\n    const [error, setError] = useState<string | null>(null);\n\n    useEffect(() => {\n        const fetchData = async () => {\n            try {\n                // Access the JSON file directly\n                const response = await fetch('/HeroData.json');\n                if (!response.ok) throw new Error('Failed to fetch content');\n                const jsonData = await response.json();\n                setData(jsonData);\n\n            } catch (err) {\n                setError('Error loading data. Please try again later.')\n                console.error('Error fetching content:', err);\n                // Fallback in case of failure\n\n            } finally {\n                setIsLoading(false);\n            }\n        };\n\n        fetchData();\n    }, []);\n\n    // Ensure we have content before rendering\n    if (isLoading) {\n        return <div className=\"py-20 text-center\">\n            <p className=\"text-xl\">Loading service...</p>\n        </div>;\n    }\n\n    // Safety check if content is empty\n    if (error) {\n        return <div className=\"py-20 text-center\">\n            <p className=\"text-xl text-red-500\">{error}</p>\n        </div>;\n    }\n\n    // Group sections with their corresponding services\n    const renderContent = () => {\n        const content = [];\n\n        for (let i = 0; i < data.length; i += 2) {\n            const section = data[i];\n            const services = data[i + 1];\n\n            if (isSection(section) && isServiceArray(services)) {\n                content.push(\n                    <div key={section.section_id} className=\"mb-20\">\n                        {/* Section Header */}\n                        <section id={section.section_id} className=\"pt-32 pb-24 bg-gradient-to-r from-teal-600 to-lime-500\">\n                            <div className=\"text-center max-w-6xl mx-auto px-4 sm:px-6 lg:px-8\">\n                                <h2 className=\"text-4xl sm:text-4xl md:text-6xl font-bold text-white mb-8\">{section.title}</h2>\n                                <p className=\"text-xl text-white opacity-90 mb-12 max-w-3xl mx-auto\">{section.text}</p>\n                                <a href=\"https://wa.me/+358445031813\" target=\"_blank\"\n                                    className=\"bg-red-500 text-white px-8 py-4 rounded-full text-lg font-semibold hover:text-white hover:bg-teal-600 transition duration-300\">\n                                    Tilaa siivous\n                                </a>\n                            </div>\n                        </section>\n\n                        {/* Services Cards */}\n                        <div className=\"container mx-auto px-1 sm:px-4 lg:px-8 py-16\">\n                            <h3 className=\"text-teal-600 text-3xl font-bold text-center mb-12\">{section.service_title}</h3>\n                            <div className=\"grid md:grid lg:grid-cols-3 gap-8\">\n                                {services.map((service) => {\n                                    // Dynamically render the correct icon component\n                                    const IconComponent = service.icon ? IconMap[service.icon] : null;\n\n                                    return (\n                                        <div id={service.service_id}\n                                            key={service.service_id || `service-${Math.random()}`}\n                                            className=\"bg-white rounded-lg shadow-lg p-6 hover:shadow-xl transition-shadow\"\n                                        >\n                                            {IconComponent && (\n                                                <div className=\"text-teal-600 mb-4\">\n                                                    <IconComponent className=\"w-12 h-12\" />\n                                                </div>\n                                            )}\n                                            <h3 className=\"text-teal-600 text-xl font-semibold mb-3\">{service.service_name || \"Service Name\"}</h3>\n                                            <p className=\"text-gray-600\">{service.description || \"Service description will be added soon.\"}</p>\n                                        </div>\n                                    );\n                                })}\n                            </div>\n                        </div>\n                    </div>\n                );\n            }\n        }\n\n        return content;\n    };\n\n    return <>{renderContent()}</>;\n};"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 240, "column": 0}, "map": {"version":3,"sources":["file:///home/jiri/akisiivous.fi/src/app/page.tsx"],"sourcesContent":["// app/page.tsx\n'use client'\nimport React, { useEffect } from 'react'\nimport { ServiceComponent } from './components/HeroSection'\n\nexport default function Home() {\n    useEffect(() => {\n        const sectionId = sessionStorage.getItem(\"scrollTarget\");\n        if (sectionId) {\n            // Wait for DOM to render (especially nested components)\n            setTimeout(() => {\n                const el = document.getElementById(sectionId);\n                if (el) {\n                    const yOffset = -133;\n                    const y = el.getBoundingClientRect().top + window.pageYOffset + yOffset;\n                    window.scrollTo({ top: y, behavior: 'smooth' });\n                }\n                sessionStorage.removeItem(\"scrollTarget\");\n            }, 300); // 300ms delay should be safe for most cases\n        }\n    }, []);\n\n\n    return (\n        <>\n            <div className='pt-2'>\n                <div>\n                    <ServiceComponent />\n                </div>\n            </div>\n\n        </>\n    )\n}"],"names":[],"mappings":"AAAA,eAAe;;;;;AAEf;AACA;AAFA;;;;AAIe,SAAS;IACpB,CAAA,GAAA,oUAAA,CAAA,YAAS,AAAD,EAAE;QACN,MAAM,YAAY,eAAe,OAAO,CAAC;QACzC,IAAI,WAAW;YACX,wDAAwD;YACxD,WAAW;gBACP,MAAM,KAAK,SAAS,cAAc,CAAC;gBACnC,IAAI,IAAI;oBACJ,MAAM,UAAU,CAAC;oBACjB,MAAM,IAAI,GAAG,qBAAqB,GAAG,GAAG,GAAG,OAAO,WAAW,GAAG;oBAChE,OAAO,QAAQ,CAAC;wBAAE,KAAK;wBAAG,UAAU;oBAAS;gBACjD;gBACA,eAAe,UAAU,CAAC;YAC9B,GAAG,MAAM,4CAA4C;QACzD;IACJ,GAAG,EAAE;IAGL,qBACI;kBACI,cAAA,6WAAC;YAAI,WAAU;sBACX,cAAA,6WAAC;0BACG,cAAA,6WAAC,wIAAA,CAAA,mBAAgB;;;;;;;;;;;;;;;;AAMrC","debugId":null}}]
}